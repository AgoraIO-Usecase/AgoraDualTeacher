import("../../../agora.gni")

static_library("embeded_lua") {
  configs += [
    "${media_sdk_path}/build:agora_config",
    "${media_sdk_path}/build:agora_suppression",
  ]
  visibility = [ "*" ]
  include_dirs = [ "src" ]
  defines = [ "LUA_COMPAT_5_2" ]
  if (!is_win || (is_win && is_clang)) {
    cflags_c = [
      "-Wno-invalid-noreturn",
      "-Wno-implicit-function-declaration",
    ]
  } else {
    cflags_c = [ "/wd4310" ]
  }
  if (is_android || is_linux) {
    defines += [ "LUA_USE_LINUX" ]
  } else if (is_mac || is_ios) {
    defines += [ "LUA_USE_MACOSX" ]
  } else if (is_win && !is_clang) {
    # msvc does not fully support C99
    defines += [ "LUA_USE_C89" ]
  }

  sources = [
    "src/lapi.c",
    "src/lapi.h",
    "src/lauxlib.c",
    "src/lauxlib.h",
    "src/lbaselib.c",
    "src/lbitlib.c",
    "src/lcode.c",
    "src/lcode.h",
    "src/lcorolib.c",
    "src/lctype.c",
    "src/lctype.h",
    "src/ldblib.c",
    "src/ldebug.c",
    "src/ldebug.h",
    "src/ldo.c",
    "src/ldo.h",
    "src/ldump.c",
    "src/lfunc.c",
    "src/lfunc.h",
    "src/lgc.c",
    "src/lgc.h",
    "src/linit.c",
    "src/liolib.c",
    "src/llex.c",
    "src/llex.h",
    "src/llimits.h",
    "src/lmathlib.c",
    "src/lmem.c",
    "src/lmem.h",
    "src/loadlib.c",
    "src/lobject.c",
    "src/lobject.h",
    "src/lopcodes.c",
    "src/lopcodes.h",
    "src/lparser.c",
    "src/lparser.h",
    "src/lprefix.h",
    "src/lstate.c",
    "src/lstate.h",
    "src/lstring.c",
    "src/lstring.h",
    "src/lstrlib.c",
    "src/ltable.c",
    "src/ltable.h",
    "src/ltablib.c",
    "src/ltm.c",
    "src/ltm.h",
    "src/lua.hpp",
    "src/luaconf.h",
    "src/lualib.h",
    "src/lundump.c",
    "src/lundump.h",
    "src/lutf8lib.c",
    "src/lvm.c",
    "src/lvm.h",
    "src/lzio.c",
    "src/lzio.h",
  ]
}
